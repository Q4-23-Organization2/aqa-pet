<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-18T16:11:22 EET" name="Surefire suite" finished-at="2024-03-18T16:11:22 EET" duration-ms="96">
    <groups>
    </groups>
    <test started-at="2024-03-18T16:11:22 EET" name="Surefire test" finished-at="2024-03-18T16:11:22 EET" duration-ms="96">
      <class name="MainRunnerTest">
        <test-method is-config="true" signature="FillInUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="FillInUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillInUsersList -->
        <test-method signature="testCalculateAverageAge()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="testCalculateAverageAge" description="Calculate the average age of all users" finished-at="2024-03-18T16:11:22 EET" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateAverageAge -->
        <test-method is-config="true" signature="ResetUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="ResetUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResetUsersList -->
        <test-method is-config="true" signature="FillInUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="FillInUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillInUsersList -->
        <test-method signature="testCheckNotAllUsersOlderThan18()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="testCheckNotAllUsersOlderThan18" description="Checking that NOT all users elder than 18 years" finished-at="2024-03-18T16:11:22 EET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckNotAllUsersOlderThan18 -->
        <test-method is-config="true" signature="ResetUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="ResetUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResetUsersList -->
        <test-method signature="testCheckUsersWithSorA(java.util.List)[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="testCheckUsersWithSorA" description="Negative test for checking users, returning an empty list" data-provider="negativeTestData" finished-at="2024-03-18T16:11:22 EET" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[NullPointerException occurred: Cannot invoke "java.util.List.stream()" because "users" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: NullPointerException occurred: Cannot invoke "java.util.List.stream()" because "users" is null
at org.testng.Assert.fail(Assert.java:111)
at MainRunnerTest.testCheckUsersWithSorA(MainRunnerTest.java:143)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:102)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:91)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUsersWithSorA -->
        <test-method is-config="true" signature="FillInUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="FillInUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillInUsersList -->
        <test-method is-config="true" signature="FillInUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="FillInUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillInUsersList -->
        <test-method is-config="true" signature="ResetUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="ResetUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResetUsersList -->
        <test-method signature="testCheckUsersWithSorA(java.util.List)[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="testCheckUsersWithSorA" description="Negative test for checking users, returning an empty list" data-provider="negativeTestData" finished-at="2024-03-18T16:11:22 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUsersWithSorA -->
        <test-method is-config="true" signature="ResetUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="ResetUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResetUsersList -->
        <test-method signature="testSortUsersByAgeFirstCase()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="testSortUsersByAgeFirstCase" description="Checking the first and last user for age after sorting" finished-at="2024-03-18T16:11:22 EET" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortUsersByAgeFirstCase -->
        <test-method is-config="true" signature="FillInUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="FillInUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillInUsersList -->
        <test-method is-config="true" signature="ResetUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="ResetUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResetUsersList -->
        <test-method is-config="true" signature="FillInUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="FillInUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillInUsersList -->
        <test-method signature="testSortUsersByAgeSecondCase()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="testSortUsersByAgeSecondCase" description="Checking each user from the list for age after sorting with an interval of 5 years" finished-at="2024-03-18T16:11:22 EET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortUsersByAgeSecondCase -->
        <test-method is-config="true" signature="ResetUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="ResetUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResetUsersList -->
        <test-method signature="testSortUsersByNameAndAge_FirstUser(java.lang.String,int)[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="testSortUsersByNameAndAge_FirstUser" description="Parameterized test with check for the first user of a sorted list" data-provider="getFirstUserParams" finished-at="2024-03-18T16:11:22 EET" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belinda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortUsersByNameAndAge_FirstUser -->
        <test-method is-config="true" signature="FillInUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="FillInUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillInUsersList -->
        <test-method is-config="true" signature="ResetUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="ResetUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResetUsersList -->
        <test-method is-config="true" signature="FillInUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="FillInUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillInUsersList -->
        <test-method signature="testSortUsersByNameAndAge_SeventhUser(java.lang.String,int)[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="testSortUsersByNameAndAge_SeventhUser" description="Parameterized test with check for the seventh user of a sorted list" data-provider="getSeventhUserParams" finished-at="2024-03-18T16:11:22 EET" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Keanu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortUsersByNameAndAge_SeventhUser -->
        <test-method is-config="true" signature="ResetUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="ResetUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResetUsersList -->
        <test-method signature="testTotalAgeLessThan400()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="testTotalAgeLessThan400" description="Checking that the total age is less than 400 years" finished-at="2024-03-18T16:11:22 EET" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalAgeLessThan400 -->
        <test-method is-config="true" signature="FillInUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="FillInUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillInUsersList -->
        <test-method is-config="true" signature="ResetUsersList()[pri:0, instance:MainRunnerTest@7ae42ce3]" started-at="2024-03-18T16:11:22 EET" name="ResetUsersList" finished-at="2024-03-18T16:11:22 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResetUsersList -->
      </class> <!-- MainRunnerTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
